<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.carpool.dao.GroupMapper" >
  <resultMap id="BaseResultMap" type="com.carpool.entity.Group" >
    <id column="g_id" property="gId" jdbcType="BIGINT" />
    <result column="l_id" property="lId" jdbcType="BIGINT" />
    <result column="g_create_user_id" property="gCreateUserId" jdbcType="BIGINT" />
    <result column="g_name" property="gName" jdbcType="VARCHAR" />
    <result column="g_notice" property="gNotice" jdbcType="VARCHAR" />
    <result column="g_description" property="gDescription" jdbcType="VARCHAR" />
    <result column="g_state" property="gState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    g_id, l_id, g_create_user_id, g_name, g_notice, g_description, g_state
  </sql>
  <select id="selectByLId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_group
    where l_id = #{lId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_group
    where g_id = #{gId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_group
    where g_id = #{gId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.carpool.entity.Group" useGeneratedKeys="true" keyProperty="gId">
    insert into t_group (g_id, l_id, g_create_user_id, 
      g_name, g_notice, g_description, 
      g_state)
    values (#{gId,jdbcType=BIGINT}, #{lId,jdbcType=BIGINT}, #{gCreateUserId,jdbcType=BIGINT}, 
      #{gName,jdbcType=VARCHAR}, #{gNotice,jdbcType=VARCHAR}, #{gDescription,jdbcType=VARCHAR}, 
      #{gState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.carpool.entity.Group" >
    insert into t_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gId != null" >
        g_id,
      </if>
      <if test="lId != null" >
        l_id,
      </if>
      <if test="gCreateUserId != null" >
        g_create_user_id,
      </if>
      <if test="gName != null" >
        g_name,
      </if>
      <if test="gNotice != null" >
        g_notice,
      </if>
      <if test="gDescription != null" >
        g_description,
      </if>
      <if test="gState != null" >
        g_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gId != null" >
        #{gId,jdbcType=BIGINT},
      </if>
      <if test="lId != null" >
        #{lId,jdbcType=BIGINT},
      </if>
      <if test="gCreateUserId != null" >
        #{gCreateUserId,jdbcType=BIGINT},
      </if>
      <if test="gName != null" >
        #{gName,jdbcType=VARCHAR},
      </if>
      <if test="gNotice != null" >
        #{gNotice,jdbcType=VARCHAR},
      </if>
      <if test="gDescription != null" >
        #{gDescription,jdbcType=VARCHAR},
      </if>
      <if test="gState != null" >
        #{gState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.carpool.entity.Group" >
    update t_group
    <set >
      <if test="lId != null" >
        l_id = #{lId,jdbcType=BIGINT},
      </if>
      <if test="gCreateUserId != null" >
        g_create_user_id = #{gCreateUserId,jdbcType=BIGINT},
      </if>
      <if test="gName != null" >
        g_name = #{gName,jdbcType=VARCHAR},
      </if>
      <if test="gNotice != null" >
        g_notice = #{gNotice,jdbcType=VARCHAR},
      </if>
      <if test="gDescription != null" >
        g_description = #{gDescription,jdbcType=VARCHAR},
      </if>
      <if test="gState != null" >
        g_state = #{gState,jdbcType=INTEGER},
      </if>
    </set>
    where g_id = #{gId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.carpool.entity.Group" >
    update t_group
    set l_id = #{lId,jdbcType=BIGINT},
      g_create_user_id = #{gCreateUserId,jdbcType=BIGINT},
      g_name = #{gName,jdbcType=VARCHAR},
      g_notice = #{gNotice,jdbcType=VARCHAR},
      g_description = #{gDescription,jdbcType=VARCHAR},
      g_state = #{gState,jdbcType=INTEGER}
    where g_id = #{gId,jdbcType=BIGINT}
  </update>
</mapper>